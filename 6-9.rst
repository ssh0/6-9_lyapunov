
.. _6-9-label:

===============================================================================
問題6.9 - ロジスティック写像のリアプノフ指数
===============================================================================

.. contents::

シミュレーションの目的
============================

系がカオス的かどうか判断する指標として、カオスの重要な性質である初期条件への敏感さを考えることができる。一般に、同一の力学系で異なる初期条件から開始するなら、軌跡差は\ :math:`n`\ の関数として変化するであろう。\ :num:`図#fig-6-9-f1`\ にロジスティック写像における差\ :math:`|\Delta x_{n}|`\ と\ :math:`n`\ の関係を図示してある。大まかに言って、\ :math:`\ln |\Delta x_{n}|`\ は\ :math:`n`\ の線形な増加関数であり、このことは、系がカオス的なら軌跡間の距離は指数関数的に大きくなることを意味する。このような発散の特徴は以下に示すリアプノフ(Lyapunov)指数\ :math:`\lambda`\ によって記述され、関係式

.. math:: |\Delta x_{n}| = |\Delta x_{0}|e^{\lambda n}
    :label: e1

で定義される。ここで\ :math:`\Delta x_{n}`\ は時刻\ :math:`n`\ における軌跡間の差である。もしリアプノフ指数\ :math:`\lambda`\ が正なら、近接した軌跡間の距離も指数関数的に広がり、系はカオス的であると言える。本シミュレーションではロジスティック写像について、このリアプノフ指数を求めることを目的とする。

リアプノフ指数を測定する素朴な方法は、わずかに異なる初期条件のもとで同じ力学系を時間発展させ、\ :math:`n`\ の関数として実際に軌跡の差を測定することである。これらの軌跡が互いに離れていく速さは\ :math:`x_{0}`\ の選び方によるので、多くの\ :math:`x_{0}`\ の値について離れていく速さを計算する必要がある。\ :math:`x_{0}`\ の各値に対して距離を式\ :eq:`e1`\ に合わせ、それから\ :math:`\lambda`\ の平均値を求めなければならないので、この方法には手間がかかる。

素朴な方法のさらに重大な限界は、軌跡が0から1までの区間に制限されているような場合に、\ :math:`n`\ が十分に大きくなると距離\ :math:`|\Delta x_{n}|`\ の値はある一定の大きさ以上には大きくなれなくなってしまうことである。しかし、\ :math:`\lambda`\ の計算を可能な限り正確にするために、可能な限り多くの反復により平均を求めたい。これを実現する方法を説明するために、まず式\ :eq:`e1`\ を変形して、\ :math:`\lambda`\ を

.. math:: \lambda=\frac{1}{n}\ln \left| \frac{\Delta x_{n}}{\Delta x_{0}} \right|

と書く。過渡的な振る舞いが終わった後の全軌跡のデータを使いたいので、

.. math:: \frac{\Delta x_{n}}{\Delta x_{0}}=\frac{\Delta x_{1}}{\Delta x_{0}}\frac{\Delta x_{2}}{\Delta x_{1}} \cdots \frac{\Delta x_{n}}{\Delta x_{n-1}}

という関係に着目すると、\ :math:`\lambda`\ を

.. math:: \lambda = \frac{1}{n}\sum_{i=0}^{n-1}\ln \left| \frac{\Delta x_{i+1}}{\Delta x_{i}} \right|
    :label: e2

と表すことができる。式\ :eq:`e2`\ は、任意の\ :math:`i`\ について\ :math:`x_{i}`\ を初期条件として考えることができるということを意味している。

.. _fig-6-9-f1:

.. figure:: figure_test.pdf
    :figclass: align-center
    :width: 12.5cm
    :alt: r = 0.91 のときのロジスティック写像の x0 = 0.5 と x0 = 0.5001 で開始した軌跡間の差 Δx_n の変化

式\ :eq:`e2`\ から、\ :math:`\lambda`\ を計算する問題は比\ :math:`\Delta x_{i+1} / \Delta x_{i}`\ を求めることに帰着することが分かる。2つの軌跡間の最初の差を可能な限り小さくしたいので、極限\ :math:`\Delta x_{i} \rightarrow 0`\ を考えて、微分\ :math:`dx_{i}`\ を計算すればよい。例としてロジスティック写像

.. math:: f(x_{i})=4rx_{i}(1-x_{i})

の微分は

.. math:: \frac{dx_{i+1}}{dx_{i}}=f'(x_{i})= 4r(1-2x_{i})
    :label: e3

であるが、\ :ref:`問題6.2 <6-2-label>`\ で行ったようにロジスティック写像の反復を行い、その反復ごとに関係\ :eq:`e3`\ と\ :math:`x_{i}`\ の値を使えば、\ :math:`dx_{i+1}/dx_{i}`\ を計算することができる。したがってリアプノフ指数は

.. math:: \lambda = \lim_{n \rightarrow \infty} \frac{1}{n} \sum_{i=0}^{n-1} \ln | f'(x_{i}) |
    :label: e4

で与えられることとなる。ここで、式\ :eq:`e4`\ の和は過渡的な振る舞いが終わってからとり始める。\ :math:`n`\ を十分に大きく選ぶことを意識するために、式\ :eq:`e4`\ には\ :math:`n \rightarrow \infty`\ の極限を明示的に書いた。この方法はアトラクタ上の点に正しく重みを付けていて、軌跡がアトラクタのある特定の領域を多くは訪れない場合に、その領域は式\ :eq:`e4`\ の和にあまり寄与しない。


作成したプログラム
=============================
本シミュレーションで作成したプログラムを以下に示す。
    

* パラメータの設定ダイアログ( :download:`SetParameter.py <SetParameter.py>` )

以前作成したプログラムをモジュールとして用いる。self.show_setting_window()によって、その引数として与えられたパラメータのリストの数に応じてパラメータの入力エントリが生成され、self.entry[i].get()でi番目の要素の取得ができる。OKボタンを押した時の挙動は、commandに関数を指定することで決めることができる。

.. literalinclude:: SetParameter.py
    :language: python
    :linenos:

* 素朴な方法によりリアプノフ指数を計算するプログラム

- :download:`6-9_lyapunov-a0.py <6-9_lyapunov-a0.py>`

\ :math:`\ln |\Delta x_{n} / \Delta x_{0}|`\ を\ :math:`n`\ に対してプロットするプログラム。このプログラムを実行すると、まず、先のSetParameterを利用して、各パラメータを代入し、その値を用いてロジスティック写像の時間発展を計算する。その際同時に\ :math:`\ln |\Delta x_{n} / \Delta x_{0}|`\ の計算も行い、配列に格納する。最後に横軸\ :math:`n`\ 、縦軸\ :math:`\ln |\Delta x_{n} / \Delta x_{0}|`\ としてグラフを描画し、表示させている。

.. literalinclude:: 6-9_lyapunov-a0.py
    :language: python
    :linenos:


- :download:`6-9_lyapunov-a.py <6-9_lyapunov-a.py>`

このプログラムを実行すると、まず設定値\ :math:`r`\ 、\ :math:`\Delta x_{0}`\ 、dxの設定ダイアログが表示され、値を入れてOKボタンを押すと、\ :math:`0 < x_{0} < 1`\ の範囲でdxの間隔でリアプノフ指数が計算され、横軸\ :math:`x_{0}`\ 、縦軸\ :math:`\lambda`\ のグラフと、その平均値が表示される。プログラムの中身については、まず、与えられたdx、\ :math:`\Delta x_{0}`\ を元にCalculateLambda内の関数set_parameterによって初期値\ :math:`x_{0}`\ と\ :math:`x_{0}+\Delta x_{0}`\ の配列が作成される。次にその各値についてlambda_for_x0が適用されて\ :math:`\lambda`\ が計算され、インスタンス配列self.lyapunovsに格納される。最後にplot_x0_lambdaとplot_average_lambdaがその値を用いてグラフを描画するという仕組みになっている。数値計算の肝となるCalculateLambdaの部分については次項で説明する。

.. literalinclude:: 6-9_lyapunov-a.py
    :language: python
    :linenos:

- :download:`CalculateLambda.py <CalculateLambda.py>`

このプログラムは6-9_lyapunov-a.pyから呼び出されるモジュールとして機能しており、これに具体的な値を代入して関数の部分それぞれを独立に実行させることができる。lambda_for_x0の中で実際に\ :math:`\lambda`\ が計算されおり、いくつかの試行により先に与えたnplotまでのnについて、最小二乗法で直線へのフィッティングを行い、その傾きを戻り値となるようにしてある。このプログラムでのnplotの選び方は非常に恣意的で、しかもこの値によって\ :math:`\lambda`\ の値は大きく変わりうる。本来ならばプログラム中で有効な範囲を判断してその範囲でフィッティングを行うべきであるが、その過程を自動化する良い解決策が見つからなかった。あるいは\ :math:`x_{0}`\ の値ごとに毎回グラフを表示して人の目で適用範囲を決めていくこともできるが、それでは良いプログラムとは言えない。この点において改良の必要がある。

.. literalinclude:: CalculateLambda.py
    :language: python
    :linenos:

* アルゴリズムを用いてリアプノフ指数を計算するプログラム( :download:`6-9_lyapunov-b.py <6-9_lyapunov-b.py>` )

前述したアルゴリズムに基づいて、リアプノフ指数を求めるプログラムを以下に示す。このプログラムでは、まずdr刻みの\ :math:`r`\ の配列を作成し、そのそれぞれの\ :math:`r`\ について関数get_lambda_rを計算する。関数get_lambda_rは、時間発展で変化する\ :math:`x`\ を計算し、ntransient回以降のデータのみ切り出し、そのそれぞれの\ :math:`x`\ についての微分係数を計算して、最後にその平均を返している。最終的に、このようにして得られた\ :math:`r`\ と\ :math:`\lambda`\ の組を使ってグラフを描画する。

.. literalinclude:: 6-9_lyapunov-b.py
    :language: python
    :linenos:
    


実習課題
=====================

a. ロジスティック写像のリアプノフ指数\ :math:`\lambda`\ を素朴な方法で計算せよ。\ :math:`r=0.91`\ 、\ :math:`x_{0}=0.5`\ 、\ :math:`\Delta x_{0}=10^{-6}`\ とし、\ :math:`\ln |\Delta x_{n} / \Delta x_{0}|`\ を\ :math:`n`\ に対してプロットせよ。\ :math:`n`\ が大きいときには\ :math:`\ln |\Delta x_{n} / \Delta x_{0}|`\ はどうなるか。\ :math:`r=0.91`\ 、\ :math:`r=0.97`\ 、\ :math:`r=1.0`\ について\ :math:`\lambda`\ を求めよ。\ :math:`r`\ の各値に対する\ :math:`\lambda`\ の値は\ :math:`x_{0}`\ や\ :math:`\Delta x_{0}`\ の選び方に強く依存するか。
 
はじめに、\ :math:`r=0.91`\ 、\ :math:`x_{0}=0.5`\ 、\ :math:`\Delta x_{0}=10^{-6}`\ として\ :math:`\ln |\Delta x_{n} / \Delta x_{0}|`\ を\ :math:`n`\ に対してプロットしたものを\ :num:`図#fig-6-9-f2`\ に示す。このグラフから、\ :math:`\ln |\Delta x_{n} / \Delta x_{0}|`\ は\ :math:`1 \le n \le 100`\ の領域では、\ :math:`n`\ が大きくなるにつれて大まかに見て線形に増加しており、それ以後\ :math:`n`\ が大きいときには\ :math:`\ln |\Delta x_{n} / \Delta x_{0}|`\ はおよそ11の周囲で振動していることが分かる。これは、素朴な方法の欠点として前述したとおり、\ :math:`x_{n}`\ の値に制限があるような今回の場合においては、仮に\ :math:`\Delta x_{n}`\ が1となり得たとして、

.. math:: \max \left( \ln \left| \frac{\Delta x_{n}}{\Delta x_{0}} \right| \right) = \ln \left| \frac{1}{\Delta x_{0}} \right|

であり、今\ :math:`\Delta x_{0}=10^{-6}`\ としていたため、\ :math:`\max ( \ln | \Delta x_{n} / \Delta x_{0} | ) = 6 \ln 10 \simeq 13.8`\ となる。ここで得られたグラフと再び比較すると、\ :math:`\ln | \Delta x_{n} / \Delta x_{0} |`\ の極大値は12程度であると分かるので、したがって\ :math:`\max ( \Delta x_{n} )`\ は実際には\ :math:`10^{-1}`\ 程度であることも推測される。

.. _fig-6-9-f2:

.. figure:: figure_1.png
    :figclass: align-center
    :width: 12.5cm
    :alt: ln|Δx_n / Δx_0| のグラフ
    
    \ :math:`\ln | \Delta x_{n} / \Delta x_{0}|`\ のグラフ


次に、\ :math:`r=0.91`\ 、\ :math:`r=0.97`\ 、\ :math:`r=1.0`\ について\ :math:`\lambda`\ を求めることにする。基本的な考え方としては、\ :num:`図#fig-6-9-f2`\ で得られたようなグラフを、さまざまな\ :math:`x_{0}`\ について試し、グラフで\ :math:`\ln | \Delta x_{n} / \Delta x_{0} |`\ が線形に増加している部分の傾きをその\ :math:`x_{0}`\ での\ :math:`\lambda`\ と見ればよい。\ :math:`\lambda`\ の値が\ :math:`x_{0}`\ に依存するかどうか確かめるため、また平均値をとって\ :math:`\lambda`\ の精度を高めるために、間隔\ :math:`dx=0.01`\ おきの\ :math:`x_{0}`\ についてそれぞれ\ :math:`\lambda`\ を求め、横軸を\ :math:`x_{0}`\ 、縦軸を\ :math:`\lambda`\ としたグラフを描いてみる。\ :math:`r=0.91`\ 、\ :math:`\Delta x_{0}=10^{-6}`\ として、傾きをとる区間をn=50までとしたものを\ :num:`図#fig-6-9-f3`\ に示す。また\ :num:`図#fig-6-9-f4`\ には\ :math:`r=0.97`\ でそれ以外の条件を同じにしたものを、\ :num:`図#fig-6-9-f5`\ に\ :math:`r=1.0`\ でそれ以外の数値を同じにしたものを示した。これらのグラフからは、\ :math:`\lambda`\ の値は\ :math:`x_{0}`\ に依存して変動しているが、その取る値は平均値の周辺にまとまって分布しており、なにか決まった関係性があるわけではないということが推測される。しかし、\ :math:`x_{0}=0.5`\ での\ :math:`\lambda`\ は大きく突出していることに注目する必要があるだろう。

.. _fig-6-9-f3:

.. figure:: figure_6.png
    :figclass: align-center
    :width: 12.5cm
    :alt: r = 0.91 、Δx0 = 10^{-6} としたときの n-λ グラフ
    
    \ :math:`r = 0.91`\ 、:math:`\Delta x_{0} = 10^{-6}` としたときの\ :math:`n - \lambda`\ グラフ


.. _fig-6-9-f4:

.. figure:: figure_7.png
    :figclass: align-center
    :width: 12.5cm
    :alt: r = 0.97 、Δx0 = 10^{-6} としたときの n-λ グラフ
    
    \ :math:`r = 0.97`\ 、:math:`\Delta x_{0} = 10^{-6}` としたときの\ :math:`n - \lambda`\ グラフ


.. _fig-6-9-f5:

.. figure:: figure_8.png
    :figclass: align-center
    :width: 12.5cm
    :alt: r = 1.0 、Δx0 = 10^{-6} としたときの n-λ グラフ
    
    \ :math:`r = 1.0`\ 、:math:`\Delta x_{0} = 10^{-6}` としたときの\ :math:`n - \lambda`\ グラフ

では次に、\ :math:`\Delta x_{0}`\ の大きさに関する依存性はどうであろうか。\ :math:`r=0.97`\ で固定し、\ :math:`\Delta x_{0}`\ を\ :math:`\Delta x_{0} = 10^{-4}`\ 、\ :math:`10^{-6}`\ 、\ :math:`10^{-8}`\ とした場合のグラフを\ :num:`図#fig-6-9-f6`\ 、\ :num:`図#fig-6-9-f7`\ 、\ :num:`図#fig-6-9-f8`\ に示す。このグラフからもわかるように、\ :math:`\Delta x_{0}`\ の大きさは、\ :math:`\lambda`\ の値に影響を与えていることがわかる。しかし、これはnplotの選び方が一意でないことと、nplotの大きさが小さいために過渡現象の大きな振動の効果が影響してしまうこととに起因する。これらの考察からも、素朴な方法でリアプノフ指数を求めることの困難さが理解できる。

.. _fig-6-9-f6:

.. figure:: figure_9.png
    :figclass: align-center
    :width: 12.5cm
    :alt: r = 0.97 、Δx0 = 10^{-4} 、nplot=30としたときの x0-λ グラフ
    
    \ :math:`r = 0.97`\ 、:math:`\Delta x_{0} = 10^{-4}` 、nplot=30としたときの\ :math:`x_{0} - \lambda`\ グラフ


.. _fig-6-9-f7:

.. figure:: figure_10.png
    :figclass: align-center
    :width: 12.5cm
    :alt: r = 0.97 、Δx0 = 10^{-6} 、nplot=30としたときの x0-λ グラフ
    
    \ :math:`r = 0.97`\ 、:math:`\Delta x_{0} = 10^{-6}` 、nplot=30としたときの\ :math:`x_{0} - \lambda`\ グラフ

.. _fig-6-9-f8:

.. figure:: figure_11.png
    :figclass: align-center
    :width: 12.5cm
    :alt: r = 0.97 、Δx0 = 10^{-8} 、nplot=40としたときの x0-λ グラフ
    
    \ :math:`r = 0.97`\ 、:math:`\Delta x_{0} = 10^{-8}` 、nplot=40としたときの\ :math:`x_{0} - \lambda`\ グラフ


b. 本文で述べたアルゴリズムを用いて、\ :math:`\Delta r = 0.01`\ の刻み幅で、\ :math:`r=0.76`\ から\ :math:`r=1.0`\ の範囲について、\ :math:`\lambda`\ を計算せよ。系がカオス的でないとき、\ :math:`\lambda`\ の符号はどうなるか。\ :math:`\lambda`\ を\ :math:`r`\ に対してプロットし、問題6.2で得られた分岐図と対応させながら、得られた結果を説明せよ。得られた\ :math:`\lambda`\ の結果を教科書に示されている図6.9と比較せよ。\ :math:`\lambda`\ の符号は分岐図に見られる系の振る舞いとどのような関係があるか。\ :math:`\lambda<0`\ の場合には、2つの軌跡は一致し系はカオス的でなくなる。しかし\ :math:`\lambda=0`\ では、軌跡はべき\ :math:`n`\ で代数的に離れていく。\ :math:`r`\ のどの値に対して\ :math:`\lambda`\ は最大になるか。

先に示したアルゴリズムを用いて、\ :math:`x_{0}=0.5`\ のとき\ :math:`\Delta r = 0.01`\ の刻み幅で、\ :math:`r=0.76`\ から\ :math:`r=1.0`\ の範囲について、\ :math:`\lambda`\ を計算し、その結果を横軸\ :math:`r`\ 、縦軸\ :math:`\lambda`\ のグラフにプロットした。これを\ :num:`図#fig-6-9-f9`\ に示す。また、さらに\ :math:`\Delta r`\ を小さくして$\ :math:`\Delta r = 0.0001`\ としたものと、問題6.2でロジスティック写像について得られた\ :math:`r`\ に関する分岐図(\ :math:`x_{0}=0.5`\ )とを比較したものを\ :num:`図#fig-6-9-f10`\ に示す。この図から明らかなように、\ :math:`r`\ が負のところでは系はカオス的でなく、窓を形成するような\ :math:`r`\ の値においても\ :math:`\lambda`\ の値は負の値である。また、図の中で点線で示したように、\ :math:`\lambda=0`\ のときは、ちょうど系の挙動の分岐点にあたることが見て取れる。はじめの\ :math:`\lambda`\ の定義からも分かるように、この値が負であるということは、初期値がずれていても、十分時間の経過した後には二つの値の間の差はほとんど0に等しくなることを意味し、則ち系の安定性を示している。分岐図だけでは、どの程度の安定性があるかまではわからないが、2つの図を並べて比較すると、\ :math:`r=0.81`\ と\ :math:`r=0.85`\ では、\ :math:`r=0.81`\ の方が系はより安定であることを知ることができる。逆に、\ :math:`\lambda`\ の値が正であるところでは、\ :num:`図#fig-6-9-f10`\ の分岐図ではカオス的挙動を示していて、\ :math:`r=1.0`\ のときに\ :math:`\lambda`\ の値が最大となっている。これも先に述べた\ :math:`\lambda`\ の意味と確かに一致している。これらのことから、系のカオスの度合いを特徴づける指標としてリアプノフ指数が適当であることが理解できる。

.. _fig-6-9-f9:

.. figure:: figure_3.png
    :figclass: align-center
    :width: 12.5cm
    :alt: Δr = 0.01 、ntransient = 1000、n_calc = 100000、x0 = 0.5 、r-λ グラフ
    
    \ :math:`\Delta r = 0.01`、ntransient = 1000、n_calc = 100000、:math:`x_{0}`\ としたときの\ :math:`r - \lambda`\ グラフ


.. _fig-6-9-f10:

.. figure:: figure_13.png
    :figclass: align-center
    :width: 12.5cm
    :alt: r の値に対するリアプノフ指数と系の分岐図の比較
    
    \ :math:`r`\ の値に対するリアプノフ指数と系の分岐図の比較



まとめ
=======================

ロジスティック写像のリアプノフ指数を、素朴な方法で、またアルゴリズムを用いて計算することで、系のカオス的であることを表す指標としてのリアプノフ指数について理解を深めることができた。素朴な方法で求める際に、線形近似の適用範囲をどのようにして決めるかという問題に対して有効な方法を見いだせなかったが、そもそも精度よくリアプノフ指数を求めるには違ったアプローチをする必要があるということの理解の助けともなった。問題に対して、素朴な方法で解決するのが難しいと思われる場合、解析的に変形ができないか考えることの重要性を再認識できた。


参考文献
============================

* ハーベイ・ゴールド,ジャン・トボチニク,石川正勝・宮島佐介訳『計算物理学入門』,ピアソン・エデュケーション, 2000.


